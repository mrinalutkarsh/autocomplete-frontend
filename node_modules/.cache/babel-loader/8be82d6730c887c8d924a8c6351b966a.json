{"ast":null,"code":"var _jsxFileName = \"/Users/mrutka/Desktop/search/src/Autocomplete.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nexport class Autocomplete extends Component {\n  constructor() {\n    super(); // this.dbsearch = (userInput) => debounce(() =>{ \n    //     this.fetchApi(userInput)\n    // }, 500);\n\n    this.state = {\n      activeOption: 0,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: ''\n    };\n\n    this.onChange = e => {\n      console.log('onChanges');\n      this.setState({\n        userInput: e.currentTarget.value\n      }, () => {\n        const {\n          userInput\n        } = this.state; // this.fetchApi(userInput)\n\n        this.dbsearch(userInput);\n      });\n    };\n\n    this.fetchApi = userInput => {\n      // debugger;\n      fetch(`http://localhost:9090/search/${userInput}`).then(p1 => Promise.resolve(p1)).then(p1 => p1.json()).then(p1 => {\n        console.log(p1);\n        this.setState({\n          filteredOptions: p1,\n          activeOption: 0,\n          showOptions: true\n        });\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeOption: 0,\n        filteredOptions: [],\n        showOptions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeOption,\n        filteredOptions\n      } = this.state;\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeOption: 0,\n          showOptions: false,\n          userInput: filteredOptions[activeOption]\n        });\n      } else if (e.keyCode === 38) {\n        if (activeOption === 0) {\n          return;\n        }\n\n        this.setState({\n          activeOption: activeOption - 1\n        });\n      } else if (e.keyCode === 40) {\n        if (activeOption === filteredOptions.length - 1) {\n          console.log(activeOption);\n          return;\n        }\n\n        this.setState({\n          activeOption: activeOption + 1\n        });\n      }\n    };\n\n    this.dbsearch = _.debounce(function (userInput) {\n      //console.log('Debounced Event:', e);\n      this.fetchApi(userInput);\n    }, 1000);\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeOption,\n        filteredOptions,\n        showOptions,\n        userInput\n      }\n    } = this;\n    let optionList;\n\n    if (showOptions && userInput) {\n      if (filteredOptions.length) {\n        optionList = /*#__PURE__*/React.createElement(\"ul\", {\n          className: \"options\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }\n        }, filteredOptions.map((optionName, index) => {\n          let className;\n\n          if (index === activeOption) {\n            className = 'option-active';\n          }\n\n          return /*#__PURE__*/React.createElement(\"li\", {\n            className: className,\n            key: optionName,\n            onClick: onClick,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }\n          }, optionName);\n        }));\n      } else {\n        optionList = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"no-options\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"em\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }\n        }, \"No Option!\"));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-box\",\n      onChange: onChange,\n      onKeyDown: onKeyDown,\n      value: userInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\",\n      className: \"search-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    })), optionList);\n  }\n\n}\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/mrutka/Desktop/search/src/Autocomplete.js"],"names":["React","Component","_","Autocomplete","constructor","state","activeOption","filteredOptions","showOptions","userInput","onChange","e","console","log","setState","currentTarget","value","dbsearch","fetchApi","fetch","then","p1","Promise","resolve","json","onClick","innerText","onKeyDown","keyCode","length","debounce","render","optionList","map","optionName","index","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport _ from 'lodash';\n\nexport class Autocomplete extends Component {\n\n    constructor(){\n        super();\n        // this.dbsearch = (userInput) => debounce(() =>{ \n        //     this.fetchApi(userInput)\n        // }, 500);\n\n        this.dbsearch = _.debounce(function(userInput) {\n            //console.log('Debounced Event:', e);\n            this.fetchApi(userInput)\n          }, 1000)\n    }\n\n    state = {\n        activeOption: 0,\n        filteredOptions: [],\n        showOptions: false,\n        userInput: ''\n    };\n\n    onChange = (e) => {\n        console.log('onChanges');\n        this.setState({\n            userInput: e.currentTarget.value\n        }, () => {\n            const { userInput } = this.state;\n            // this.fetchApi(userInput)\n            this.dbsearch(userInput);\n        });\n\n    };\n\n    fetchApi = (userInput) => {\n        // debugger;\n        fetch(`http://localhost:9090/search/${userInput}`)\n            .then((p1) => Promise.resolve(p1))\n            .then((p1) => p1.json())\n            .then((p1) => {\n                console.log(p1);\n                this.setState({\n                    filteredOptions: p1,\n                    activeOption: 0,\n                    showOptions: true\n                })\n            });\n    }\n        \n\n    onClick = (e) => {\n        this.setState({\n            activeOption: 0,\n            filteredOptions: [],\n            showOptions: false,\n            userInput: e.currentTarget.innerText\n        });\n    };\n    onKeyDown = (e) => {\n        const { activeOption, filteredOptions } = this.state;\n\n        if (e.keyCode === 13) {\n            this.setState({\n                activeOption: 0,\n                showOptions: false,\n                userInput: filteredOptions[activeOption]\n            });\n        } else if (e.keyCode === 38) {\n            if (activeOption === 0) {\n                return;\n            }\n            this.setState({ activeOption: activeOption - 1 });\n        } else if (e.keyCode === 40) {\n            if (activeOption === filteredOptions.length - 1) {\n                console.log(activeOption);\n                return;\n            }\n            this.setState({ activeOption: activeOption + 1 });\n        }\n    };\n\n    render() {\n        const {\n            onChange,\n            onClick,\n            onKeyDown,\n\n            state: { activeOption, filteredOptions, showOptions, userInput }\n        } = this;\n        let optionList;\n        if (showOptions && userInput) {\n            if (filteredOptions.length) {\n                optionList = (\n                    <ul className=\"options\">\n                        {filteredOptions.map((optionName, index) => {\n                            let className;\n                            if (index === activeOption) {\n                                className = 'option-active';\n                            }\n                            return (\n                                <li className={className} key={optionName} onClick={onClick}>\n                                    {optionName}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                );\n            } else {\n                optionList = (\n                    <div className=\"no-options\">\n                        <em>No Option!</em>\n                    </div>\n                );\n            }\n        }\n        return (\n            <React.Fragment>\n                <div className=\"search\">\n                    <input\n                        type=\"text\"\n                        className=\"search-box\"\n                        onChange={onChange}\n                        onKeyDown={onKeyDown}\n                        value={userInput}\n                    />\n                    <input type=\"submit\" value=\"\" className=\"search-btn\" />\n                </div>\n                {optionList}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}